name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "preview-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build-preview:
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create .env file from secrets
        run: |
          echo "VITE_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN || '' }}" >> .env
          echo "VITE_REPO_OWNER=${{ secrets.REPO_OWNER || '' }}" >> .env
          echo "VITE_REPO_NAME=${{ secrets.REPO_NAME || '' }}" >> .env
          echo "VITE_GITHUB_ENTERPRISE_URL=${{ secrets.GITHUB_ENTERPRISE_URL || '' }}" >> .env

      - name: Build SvelteKit app
        run: yarn build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  comment-preview:
    runs-on: ubuntu-latest
    needs: build-preview
    steps:
      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Preview deployment')
            );
            
            const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/`;
            const prNumber = context.issue.number;
            const commentBody = `ðŸš€ **Preview deployment ready!**
            
            **Preview URL:** ${previewUrl}
            **PR #${prNumber}** - Branch: \`${{ github.head_ref }}\`
            
            This preview will be updated automatically when you push new commits to this PR.
            
            ---
            *This comment was automatically generated by GitHub Actions.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
